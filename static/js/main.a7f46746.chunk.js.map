{"version":3,"sources":["Components/Spinner.js","Components/Card.js","Components/Helpers/getBreeds.js","Components/Errors.js","Components/Select.js","Components/Helpers/getDog.js","App.js","index.js"],"names":["Spinner","className","Card","dog","loading","updateDog","onClick","breed","id","src","image","alt","name","getBreeds","a","fetch","res","ok","url","status","statusText","Error","json","breeds","Errors","error","initialBreeds","Select","useState","setBreeds","setError","useEffect","updateBreeds","newBreeds","console","log","onChange","e","target","value","map","getDog","breedId","data","initialDog","App","setDog","setLoading","newDog","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7f46746.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-ellipsis-7cnzitzqrkb\">\r\n      <div className=\"ldio-4yyvsrn3e6q\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport Spinner from './Spinner'\r\n\r\nconst Card = ({dog, loading, updateDog}) => {\r\n\r\n    if(loading) return <Spinner/>\r\n\r\n    return (\r\n       \r\n        <div className=\"card bounce\" onClick={() => updateDog(dog.breed.id)}>\r\n         \r\n            <img src={dog.image} alt=\"dog\">\r\n            </img>\r\n           { <p>{dog.breed.name}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","const getBreeds = async () =>{\r\nconst url = \"https://api.thedogapi.com/v1/breeds\";\r\nconst res = await fetch(url);\r\n\r\nif(!res.ok){\r\n    const {url, status, statusText} = res;\r\n    throw Error(`Error: ${status} ${statusText} in fetch ${url}`)\r\n}\r\nconst breeds = await res.json();\r\n\r\nreturn breeds;\r\n}\r\n\r\nexport default getBreeds;","import React from 'react'\r\n\r\nconst Errors = ({error}) => {\r\n    return (\r\n        <div className=\"error\">\r\n            {error}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Errors\r\n","import React, { useEffect, useState } from \"react\";\r\nimport getBreeds from \"./Helpers/getBreeds\";\r\nimport Errors from \"./Errors\";\r\n\r\nconst initialBreeds = [\r\n  {\r\n    id: 1,\r\n    name: \"boxer\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Husky\",\r\n  },\r\n];\r\nconst Select = ({ updateDog }) => {\r\n  const [breeds, setBreeds] = useState(initialBreeds);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateBreeds();\r\n  }, []);\r\n\r\n  const updateBreeds = async () => {\r\n    try {\r\n      const newBreeds = await getBreeds();\r\n      setBreeds(newBreeds);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setError(\"Error al cargar las razas\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <select onChange={(e) => updateDog(e.target.value)}>\r\n        {breeds.map((breed) => (\r\n          <option value={breed.id} key={breed.id}>\r\n            {breed.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {error && <Errors error={error}/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","const getDog = async (breedId) => {\r\n\r\n\r\n   const url = !breedId || breedId === 0\r\n   \r\n   ? \"https://api.thedogapi.com/v1/images/search\"\r\n   : `https://api.TheDogAPI.com/v1/images/search?breed_ids=${breedId}`\r\n\r\n\r\n  const res = await fetch(url);\r\n  if(!res.ok){\r\n    const {url, status, statusText} = res;\r\n    throw Error(`Error: ${status} ${statusText} in fetch ${url}`)\r\n}\r\n  const [data] = await res.json();\r\n\r\n  let {\r\n    url: image,\r\n    breeds: [breed],\r\n  } = data;\r\n\r\n  if(!breed){\r\n      breed = {\r\n          id: 0,\r\n          name: 'random'\r\n      }\r\n  }\r\n\r\n  const dog = {\r\n    image,\r\n    breed,\r\n  };\r\n\r\n\r\n\r\n  return dog;\r\n};\r\n\r\nexport default getDog;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/Card\";\r\nimport Select from \"./Components/Select\";\r\nimport getDog from \"./Components/Helpers/getDog\";\r\nimport Errors from \"./Components/Errors\";\r\n\r\nconst initialDog = {\r\n  image:\r\n    \"\",\r\n  breed: {\r\n    id: \"0\",\r\n    name: \"\",\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  const [dog, setDog] = useState(initialDog);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateDog();\r\n  }, []);\r\n\r\n  const updateDog = async (breedId) => {\r\n    try {\r\n      setLoading(true);\r\n      const newDog = await getDog(breedId);\r\n      setDog(newDog);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setError(\"Error al cargar un perro\")\r\n      setLoading(false);\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Select updateDog={updateDog} />\r\n\r\n      {error &&  <Errors error={error}/> }\r\n     \r\n      <Card dog={dog} updateDog={updateDog} loading={loading} />\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}